# Worker Manager - VPN 없는 버전
# 워커 환경 설정 및 컨테이너 배포 시스템

services:
  worker-api:
    image: heoaa/worker-manager:latest
    container_name: worker-api
    privileged: true
    cap_add:
      - NET_ADMIN
      - NET_RAW
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://worker:workerpass@postgres:5432/workerdb}
      - API_PORT=8091
      - API_TOKEN=${API_TOKEN:-test-token-123}
      - LOCAL_SERVER_IP=${LOCAL_SERVER_IP:-localhost}
      - CENTRAL_SERVER_URL=${CENTRAL_SERVER_URL:-http://192.168.0.88:8000}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./api:/app:ro  # 소스 코드를 읽기 전용으로 마운트
    command: uvicorn main:app --host 0.0.0.0 --port 8091 --reload
    ports:
      - "0.0.0.0:8091:8091"  # 모든 인터페이스에서 명시적으로 리스닝
    depends_on:
      - postgres
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - worker_net

  postgres:
    image: postgres:15
    container_name: worker-postgres
    environment:
      - POSTGRES_DB=workerdb
      - POSTGRES_USER=worker
      - POSTGRES_PASSWORD=workerpass
    volumes:
      - worker_db_data:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5434:5432"  # DB는 로컬만
    restart: unless-stopped
    networks:
      - worker_net

  web-dashboard:
    image: heoaa/worker-manager-dashboard:latest
    container_name: worker-dashboard
    environment:
      - API_URL=http://worker-api:8091
      - API_TOKEN=${API_TOKEN:-test-token-123}
      - LOCAL_SERVER_IP=${LOCAL_SERVER_IP:-localhost}
    volumes:
      - ./web-dashboard:/app:ro  # 소스 코드를 읽기 전용으로 마운트
    command: python app.py  # Flask 개발 서버 사용
    ports:
      - "0.0.0.0:5000:5000"  # 모든 인터페이스
    depends_on:
      - worker-api
    restart: unless-stopped
    networks:
      - worker_net

networks:
  worker_net:
    driver: bridge

volumes:
  worker_db_data:
